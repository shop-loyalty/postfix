#!/usr/bin/python2
"""
Script for stopping supervisor if on of it's subprocesses died
"""

import sys
import os
import signal


def write_stdout(s):
    # only eventlistener protocol messages may be sent to stdout
    sys.stdout.write(s)
    sys.stdout.flush()


def write_stderr(s):
    sys.stderr.write(s)
    sys.stderr.flush()


def main():
    while True:
        # transition from ACKNOWLEDGED to READY
        write_stdout('READY\n')

        # read header line and print it to stderr
        line = sys.stdin.readline()
        write_stderr(line)

        pid_file = os.environ.get('SUPERVISOR_PID_FILE', '/var/run/supervisor.pid')

        try:
            pidfile = open(pid_file, 'r')
            pid = int(pidfile.readline())
            os.kill(pid, signal.SIGQUIT)
        except Exception as e:
            write_stderr('Could not kill supervisor: ' + str(e) + '\n')

        write_stderr(' '.join(sys.argv) + ': killed\n')
        write_stdout('RESULT 2\nOK\n')

if __name__ == '__main__':
    main()
